---
# tasks file for rabbitmq
- name: Install RabbitMQ Apt Packages
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600 force=yes
  become: true
  with_items:
    - rabbitmq-server

- name: Ensure rabbitmq app is stopped
  command: "rabbitmqctl stop_app"
  become: true
  ignore_errors: true

- name: Copy Cookie from primary
  fetch: src=/var/lib/rabbitmq/.erlang.cookie dest=/tmp/ flat=yes
  when: "inventory_hostname in groups['rabbitmq-master']"
  become: true

- name: Synchronizing Cookie
  copy: src=/tmp/.erlang.cookie dest=/var/lib/rabbitmq/.erlang.cookie
  when: inventory_hostname in groups['rabbitmq-slave']
  become: true

- name: Configure RabbitMQ
  template: src=rabbitmq-env.conf.j2 dest=/etc/rabbitmq/rabbitmq-env.conf
  become: true

- name: restart machine
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 0
  poll: 0
  become: true
  when: inventory_hostname in groups['rabbitmq-slave']
  ignore_errors: true

- name: waiting for server to come back
  local_action: wait_for host={{ inventory_hostname }} state=started delay=1 timeout=30
  when: inventory_hostname in groups['rabbitmq-slave']

- name: Start Primary RabbitMQ
  command: "rabbitmqctl force_boot"
  when: inventory_hostname in groups['rabbitmq-master']
  become: true

- name: Start Primary RabbitMQ
  command: "rabbitmqctl start_app"
  when: inventory_hostname in groups['rabbitmq-master']
  become: true

- name: Join Primary RabbitMQ
  command: "rabbitmqctl join_cluster rabbit@{{ rabbitmq_primary_sname }}"
  when: inventory_hostname in groups['rabbitmq-slave']
  register: command_output
  failed_when: "'error' in command_output.stderr"
  become: true

- name: Start RabbitMQ
  command: "rabbitmqctl start_app"
  when: inventory_hostname in groups['rabbitmq-slave']
  become: true

- name: Add RabbitMQ User
  rabbitmq_user:  user={{ RABBIT_USER }}
                  password={{ RABBIT_PASS }}
                  vhost=/
                  configure_priv=.*
                  read_priv=.*
                  write_priv=.*
                  state=present
  become: true
